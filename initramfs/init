#!/bin/sh
# Initial script for Linux Live Kit
# Author: Tomas M <http://www.linux-live.org/>

export PATH=.:/:/usr/sbin:/usr/bin:/sbin:/bin

. /lib/config
. /lib/livekitlib

transfer_initramfs

MEMORY=/memory
CHANGES=$MEMORY/changes
UNION=$MEMORY/union
DATAMNT=$MEMORY/data
BUNDLES=$MEMORY/bundles

header "Live Kit init <http://www.linux-live.org/>"

init_proc_sysfs

debug_start
                                                                                                                                                       debug_shell
# load some modules manually first, then modprobe everything we have
init_devs
init_aufs
init_zram

# modprobe all devices excluding network drivers
modprobe_everything -v /drivers/net/

# initialize blkid cache file
init_blkid_cache
                                                                                                                                                      debug_shell
# If iso is loaded through ventoy, execute ventoy hook script.
# Creates mapper device: /dev/mapper/ventoy (which is a simlink to /dev/dm-0)
if [[ -d /ventoy ]]
then
    # init_devs must be executed again, otherwise disk devices are not available yet
    # But these are required for the ventoy disk mount hook
    . /ventoy/hook/ventoy-hook-lib.sh
    while [[ $(get_ventoy_disk_name) == "unknown" ]]
    do
        init_devs
    done
    /ventoy/busybox/sh /ventoy/hook/debian/disk_mount_hook.sh
fi
                                                                                                                                                      debug_shell
# find data dir with filesystem bundles
DATA="$(find_data 45 "$DATAMNT")"
check_data_found "$DATA"
                                                                                                                                                      debug_shell
# setup persistent changes, if possible
persistent_changes "$DATA" "$CHANGES"
                                                                                                                                                      debug_shell
# copy to RAM if needed
DATA="$(copy_to_ram "$DATA" "$CHANGES")"

# mount bundles
mount_bundles "$DATA" "$BUNDLES"
                                                                                                                                                      debug_shell
# init aufs union, or setup overlayfs union
init_union "$CHANGES" "$UNION" "$BUNDLES"

# add data to aufs union
union_append_bundles "$BUNDLES" "$UNION"
                                                                                                                                                      debug_shell
# rootcopy
copy_rootcopy_content "$DATA" "$UNION"

# create fstab
fstab_create "$UNION" "$DATAMNT"
                                                                                                                                                      debug_shell
# run user custom preinit
user_preinit "$DATA" "$UNION"

header "Live Kit done, starting $LIVEKITNAME"
change_root "$UNION"

header "!!ERROR occured, you shouldn't be here.!!"
/bin/sh
